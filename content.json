{"pages":[],"posts":[{"title":"我的第一个博客","text":"缘起​ 这是在2022年寒假，苏州新冠疫情比较严重的时候，也是因为这原因无奈只好推迟返校。就是在这个时候偶然浏览网页看见了一个计算机新手写的个人博客，里面的内容虽然不及csdn上的懂哥业界大牛写的那么好，无非也就是一些简单的编程语言入门的笔记，一项技术的学习计划等，但是总结的还是十分详细的。就是因为他引起了我的兴趣，想着也顺便提升一下自己的总结能力，当然也为我枯燥的隔离生活添点乐趣~ 前期准备​ 当然万事开头难，想要搭建好自己的个人博客不是件容易的事至少对非科班出生的。在搭建前我查阅了非常多的资料，在youtube上看了许多博主教学视频（假期我自建了线路可以科学上网），他们介绍了许多像WordPress等架构来搭建个人博客，但问题什么是架构？ ​ 后来我了解到这些架构就是一个框架就是可以复用的代码，就是“不要重复造轮子”中的“轮子”，就是别人已经写好的封装了各种复杂 API 的库。框架可以帮你完成一些基础语法本身也可以完成的事情，让你不必在建房子的时候从烧砖开始，而是可以解放思维直接开始画楼房设计图。所以我选择了一种叫Hexo的架构。 Hexo​ Hexo，就是一个可以帮助你生成静态网页的一个工具，所有的核心功能比如打标签归档加时间，以及界面美化工作都帮你做好了，你可以专注于博客内容的创作，而不必学习如何“烧砖”（写前端代码）。网上搜索“hexo”，可以找到它的官网。hexo 的官网文档做得非常好，不仅提供准确的中文版文档，还附有视频，让我学得非常之愉快。 Nodw.js​ 这是在安装hexo架构时必要的工具之一。Node.js 是一个让 JavaScript 运行在服务端的开发平台，官方说是什么它让JavaScript成为与PHP、Python、Perl、Ruby等服务端语言平起平坐的脚本语言感觉就是nb咯。当让他里面自带的npm也很重要，理解为一个安装程序吧，我也不知道~~~ Git​ 这是让我很意外的在我电脑里竟然下载了git——版本控制系统（上课用到过），git 的安装和使用就不多说了。用于将 hexo 生成好的页面给推送到 github 这个远程库里。 创建博客​ 做到这步真的不容易，在我本地创建完第一次测试时Hello World，也是十分兴奋。当然中间有许多问题也有想算了，还好坚持下来，还是很有成就感的。 ​ 如你所见，你现在看见的是我经过不断优化，读了上千条代码，慢慢了解这些构架的意思，毕竟六级才过没多少分，英文水平真的不太行。不过好在我完成了优化，奖励自己清购物车！ 步骤总结由于网上教程很多，我在这里只是简单把我部署博客的步骤总结一下： 开一个 github 空仓库 在一个本地空文件夹内初始化 hexo 此文件夹内，与远程库建立关联 给_config.yml文件内deploy属性设置好type（: git，记得冒号后面有个空格）、url（github 仓库的链接）和branch（推送到的分支，一般用 master） 修改其他配置比如title、author、new_post_name、language、post_asset_folder 安装一个 git 部署npm install --save hexo-deployer-git 生成并在本地测试页面效果 生成并部署网站hexo d -g 新建，编辑文章然后重复上一步 最后几句话​ 这也只是个开始，当然有很多不足慢慢来吧，虽说我之后不一定有空来运营，但是还是会偶尔总结一下近期学到的东西，方便自己复习吧，当然也是大家共同进步的一点力量。 ​ 这个寒假真的相当充实，志愿者也是相当的累，还是收获多吧。 ​ 最后的最后附上几张志愿时照片，一方面为了测试一下照片能不能上传，另一方面也是记录一下自己的经历。","link":"/posts/57728.html"}],"tags":[{"name":"闲谈","slug":"闲谈","link":"/tags/%E9%97%B2%E8%B0%88/"}],"categories":[{"name":"博客学习","slug":"博客学习","link":"/categories/%E5%8D%9A%E5%AE%A2%E5%AD%A6%E4%B9%A0/"}]}